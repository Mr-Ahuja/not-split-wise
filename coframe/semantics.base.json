{
  "version": "1.0.0",
  "keys": {
    "build.strategy": {
      "desc": "How the project is built.",
      "protocol": {
        "preconditions": [
          "runtime.commands.install",
          "runtime.commands.build"
        ],
        "actions": [
          "RUN: <runtime.commands.install>",
          "RUN: <runtime.commands.build>"
        ],
        "postconditions": [
          "ASSERT: artifacts match <artifact.patterns>"
        ],
        "failure_policy": "stop_and_prompt"
      }
    },
    "deploy.strategy": {
      "desc": "How built artifacts are published.",
      "protocol": {
        "preconditions": [
          "artifact.patterns"
        ],
        "actions": [
          "APPLY_OPERATOR: <operator>"
        ],
        "postconditions": [
          "ASSERT: published URL or artifact"
        ],
        "failure_policy": "stop_and_prompt"
      }
    }
  },
  "operators": {
    "op.deploy.git.pages": {
      "desc": "Publish static build to GitHub Pages via Git CLI (gh-pages branch).",
      "assumptions": [
        "Repository has Git CLI access",
        "Pages configured to serve from gh-pages branch"
      ],
      "steps": [
        "Ensure clean working tree",
        "Build artifacts into <params.path> (e.g., dist)",
        "Create orphan worktree for gh-pages or use subtree",
        "Copy artifacts into staging area",
        "Commit with message (e.g., chore: publish)",
        "Push to origin/<params.branch> (default: gh-pages)"
      ]
    },
    "op.build.vite": {
      "desc": "Build via Vite",
      "assumptions": [
        "Vite present in package.json"
      ],
      "steps": [
        "Install deps",
        "Build",
        "Expect dist/** artifacts"
      ]
    },
    "op.build.cra": {
      "desc": "Build via Create React App (CRA)",
      "assumptions": [
        "CRA scripts present in package.json"
      ],
      "steps": [
        "Install deps",
        "Build",
        "Expect build/** artifacts"
      ]
    },
    "op.deploy.gha.pages": {
      "desc": "Deploy static site via GitHub Pages workflow",
      "steps": [
        "Create/verify .github/workflows/pages.yml",
        "Push to main"
      ]
    },
    "op.deploy.firebase.hosting": {
      "desc": "Deploy static site to Firebase Hosting",
      "assumptions": [
        "firebase.json configured",
        "Project has Hosting enabled"
      ],
      "steps": [
        "Install Firebase CLI (documented only)",
        "Run firebase deploy --only hosting",
        "Expect Hosting URL"
      ]
    },
    "op.deploy.vercel": {
      "desc": "Deploy static site to Vercel",
      "assumptions": [
        "Vercel project linked to repo"
      ],
      "steps": [
        "Ensure vercel.json or project settings",
        "Push to main or run vercel --prod",
        "Expect production URL"
      ]
    }
  },
  "policies": {
    "write_allowlist": [
      "templates/**",
      "implementations/**",
      ".github/workflows/**",
      "apps/**",
      "public/**"
    ],
    "max_diff_lines": 400
  },
  "merge": {
    "hints": {
      "artifact.patterns": "replace",
      "notes": "append"
    }
  }
}
